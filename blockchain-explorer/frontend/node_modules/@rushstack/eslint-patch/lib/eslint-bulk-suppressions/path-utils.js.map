{"version":3,"file":"path-utils.js","sourceRoot":"","sources":["../../src/eslint-bulk-suppressions/path-utils.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;AAE3D,4CAAoB;AACpB,gDAAwB;AACxB,gDAA8C;AAE9C,SAAgB,6BAA6B,CAAC,SAAiB;IAC7D,IAAI,OAAO,CAAC,GAAG,CAAC,6BAA6B,KAAK,MAAM,EAAE,CAAC;QACzD,OAAO;IACT,CAAC;IAED,MAAM,cAAc,GAAG,6BAA6B,CAAC;IACrD,MAAM,YAAY,GAAG,2BAA2B,CAAC;IAEjD,MAAM,aAAa,GAAG;QACpB;;WAEG;QACH,aAAa,EAAE,OAAO;QACtB;;WAEG;QACH,aAAa,EAAE,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,CAAC;KAC1E,CAAC;IAEF,OAAO,CAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,YAAY,CAAC,CAAC;AAC7E,CAAC;AApBD,sEAoBC;AAED,SAAgB,iBAAiB;IAC/B,IAAI,CAAC,0BAAY,EAAE,CAAC;QAClB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;IAC/D,CAAC;IAED,OAAO,cAAI,CAAC,IAAI,CAAC,0BAAY,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC/D,CAAC;AAND,8CAMC;AAED,SAAgB,uBAAuB,CAAC,SAAiB,EAAE,wBAAgC;IACzF,YAAE,CAAC,SAAS,CAAC,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3E,MAAM,oBAAoB,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC;IAE/F,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AALD,0DAKC;AAED,SAAS,uBAAuB;IAC9B,IAAI,CAAC,0BAAY,EAAE,CAAC;QAClB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;IAC/D,CAAC;IACD,MAAM,qBAAqB,GAAG,cAAI,CAAC,IAAI,CAAC,0BAAY,EAAE,cAAc,CAAC,CAAC;IACtE,MAAM,iBAAiB,GAAG,YAAE,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC5E,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IAC1D,MAAM,oBAAoB,GAAG,mBAAmB,CAAC,OAAO,CAAC;IAEzD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAED,SAAgB,2BAA2B;IACzC,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,wBAAwB,GAAG,iBAAiB,oBAAoB,KAAK,CAAC;IAC5E,OAAO,wBAAwB,CAAC;AAClC,CAAC;AAJD,kEAIC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport fs from 'fs';\nimport path from 'path';\nimport { eslintFolder } from '../_patch-base';\n\nexport function findAndConsoleLogPatchPathCli(patchPath: string): void {\n  if (process.env._RUSHSTACK_ESLINT_BULK_DETECT !== 'true') {\n    return;\n  }\n\n  const startDelimiter = 'RUSHSTACK_ESLINT_BULK_START';\n  const endDelimiter = 'RUSHSTACK_ESLINT_BULK_END';\n\n  const configuration = {\n    /**\n     * `@rushtack/eslint`-bulk should report an error if its package.json is older than this number\n     */\n    minCliVersion: '0.0.0',\n    /**\n     * `@rushtack/eslint-bulk` will invoke this entry point\n     */\n    cliEntryPoint: path.resolve(patchPath, '..', 'exports', 'eslint-bulk.js')\n  };\n\n  console.log(startDelimiter + JSON.stringify(configuration) + endDelimiter);\n}\n\nexport function getPathToLinterJS(): string {\n  if (!eslintFolder) {\n    throw new Error('Cannot find ESLint installation to patch.');\n  }\n\n  return path.join(eslintFolder, 'lib', 'linter', 'linter.js');\n}\n\nexport function getPathToGeneratedPatch(patchPath: string, nameOfGeneratedPatchFile: string): string {\n  fs.mkdirSync(path.join(patchPath, 'temp', 'patches'), { recursive: true });\n  const pathToGeneratedPatch = path.join(patchPath, 'temp', 'patches', nameOfGeneratedPatchFile);\n\n  return pathToGeneratedPatch;\n}\n\nfunction getEslintPackageVersion() {\n  if (!eslintFolder) {\n    throw new Error('Cannot find ESLint installation to patch.');\n  }\n  const eslintPackageJsonPath = path.join(eslintFolder, 'package.json');\n  const eslintPackageJson = fs.readFileSync(eslintPackageJsonPath).toString();\n  const eslintPackageObject = JSON.parse(eslintPackageJson);\n  const eslintPackageVersion = eslintPackageObject.version;\n\n  return eslintPackageVersion;\n}\n\nexport function getNameOfGeneratedPatchFile() {\n  const eslintPackageVersion = getEslintPackageVersion();\n  const nameOfGeneratedPatchFile = `linter-patch-v${eslintPackageVersion}.js`;\n  return nameOfGeneratedPatchFile;\n}\n"]}