{"version":3,"file":"suppress.js","sourceRoot":"","sources":["../../../src/eslint-bulk-suppressions/cli/suppress.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { ExecException, exec } from 'child_process';\nimport { getEslintCli } from './utils/get-eslint-cli';\nimport { printSuppressHelp } from './utils/print-help';\n\nexport function suppress() {\n  const args = process.argv.slice(3);\n\n  if (args.includes('--help') || args.includes('-h')) {\n    printSuppressHelp();\n    process.exit(0);\n  }\n\n  // Use reduce to create an object with all the parsed arguments\n  const parsedArgs = args.reduce<{\n    rules: string[];\n    all: boolean;\n    files: string[];\n  }>(\n    (acc, arg, index, arr) => {\n      if (arg === '--rule') {\n        // continue because next arg should be the rule\n      } else if (index > 0 && arr[index - 1] === '--rule' && arr[index + 1]) {\n        acc.rules.push(arg);\n      } else if (arg === '--all') {\n        acc.all = true;\n      } else if (arg.startsWith('--')) {\n        throw new Error(`@rushstack/eslint-bulk: Unknown option: ${arg}`);\n      } else {\n        acc.files.push(arg);\n      }\n      return acc;\n    },\n    { rules: [], all: false, files: [] }\n  );\n\n  if (parsedArgs.files.length === 0) {\n    throw new Error(\n      '@rushstack/eslint-bulk: Files argument is required. Use glob patterns to specify files or use `.` to suppress all files for the specified rules.'\n    );\n  }\n\n  if (parsedArgs.rules.length === 0 && !parsedArgs.all) {\n    throw new Error(\n      '@rushstack/eslint-bulk: Please specify at least one rule to suppress. Use --all to suppress all rules.'\n    );\n  }\n\n  const eslintCLI = getEslintCli(process.cwd());\n\n  // Find the index of the last argument that starts with '--'\n  const lastOptionIndex = args\n    .map((arg, i) => (arg.startsWith('--') ? i : -1))\n    .reduce((lastIndex, currentIndex) => Math.max(lastIndex, currentIndex), -1);\n\n  // Check if options come before files\n  if (parsedArgs.files.some((file) => args.indexOf(file) < lastOptionIndex)) {\n    throw new Error(\n      '@rushstack/eslint-bulk: Unable to parse command line arguments. All options should come before files argument.'\n    );\n  }\n\n  const env: NodeJS.ProcessEnv = { ...process.env };\n  if (parsedArgs.all) {\n    env.ESLINT_BULK_SUPPRESS = '*';\n  } else if (parsedArgs.rules.length > 0) {\n    env.ESLINT_BULK_SUPPRESS = parsedArgs.rules.join(',');\n  }\n\n  exec(\n    `${eslintCLI} ${parsedArgs.files.join(' ')} --format=json`,\n    { env },\n    (error: ExecException | null, stdout: string, stderr: string) => {\n      // if errorCount != 0, ESLint will process.exit(1) giving the false impression\n      // that the exec failed, even though linting errors are to be expected\n      const eslintOutputWithErrorRegex = /\"errorCount\":(?!0)\\d+/;\n      const isEslintError = error !== null && error.code === 1 && eslintOutputWithErrorRegex.test(stdout);\n\n      if (error && !isEslintError) {\n        throw new Error(`@rushstack/eslint-bulk execution error: ${error.message}`);\n      }\n\n      if (stderr) {\n        throw new Error(`@rushstack/eslint-bulk ESLint errors: ${stderr}`);\n      }\n\n      if (parsedArgs.all) {\n        console.log(\n          `@rushstack/eslint-bulk: Successfully suppressed all rules for file(s) ${parsedArgs.files}`\n        );\n      } else if (parsedArgs.rules.length > 0) {\n        console.log(\n          `@rushstack/eslint-bulk: Successfully suppressed rules ${parsedArgs.rules} for file(s) ${parsedArgs.files}`\n        );\n      }\n    }\n  );\n}\n"]}