{"version":3,"file":"bulk-suppressions-patch.js","sourceRoot":"","sources":["../../src/eslint-bulk-suppressions/bulk-suppressions-patch.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { TSESTree } from '@typescript-eslint/types';\nimport { spawnSync } from 'child_process';\nimport fs from 'fs';\nimport path from 'path';\nimport * as Guards from './ast-guards';\n\nimport { eslintFolder } from '../_patch-base';\n\ninterface Suppression {\n  file: string;\n  scopeId: string;\n  rule: string;\n}\n\ninterface BulkSuppressionsJson {\n  suppressions: Suppression[];\n}\n\nfunction getNodeName(node: TSESTree.Node): string | null {\n  if (!Guards.isNodeWithName(node)) return null;\n\n  if (Guards.isClassDeclarationWithName(node)) return node.id.name;\n\n  if (Guards.isFunctionDeclarationWithName(node)) return node.id.name;\n\n  if (Guards.isClassExpressionWithName(node)) return node.id.name;\n\n  if (Guards.isFunctionExpressionWithName(node)) return node.id.name;\n\n  if (Guards.isNormalVariableDeclaratorWithAnonymousExpressionAssigned(node)) return node.id.name;\n\n  if (Guards.isNormalObjectPropertyWithAnonymousExpressionAssigned(node)) return node.key.name;\n\n  if (Guards.isNormalClassPropertyDefinitionWithAnonymousExpressionAssigned(node)) return node.key.name;\n\n  if (Guards.isNormalAssignmentPatternWithAnonymousExpressionAssigned(node)) return node.left.name;\n\n  if (Guards.isNormalMethodDefinition(node)) return node.key.name;\n\n  if (Guards.isTSEnumDeclaration(node)) return node.id.name;\n\n  if (Guards.isTSInterfaceDeclaration(node)) return node.id.name;\n\n  if (Guards.isTSTypeAliasDeclaration(node)) return node.id.name;\n\n  return null;\n}\n\nfunction calculateScopeId(node: any | (TSESTree.Node & { parent?: TSESTree.Node }) | undefined): string {\n  const scopeIds: string[] = [];\n  for (let current = node; current; current = current.parent) {\n    const scopeIdForASTNode = getNodeName(current);\n    if (scopeIdForASTNode !== null) scopeIds.unshift(scopeIdForASTNode);\n  }\n\n  if (scopeIds.length === 0) return '.';\n\n  return '.' + scopeIds.join('.');\n}\n\n/**\n * @throws Throws an error if the command to retrieve the root path fails.\n * @returns The root path of the monorepo.\n */\nexport function getGitRootPath(): string {\n  const result = spawnSync('git', ['rev-parse', '--show-toplevel'], { encoding: 'utf-8' });\n  if (result.status !== 0) throw new Error(`get root path failed`);\n  return result.stdout.toString().trim();\n}\n\nexport const GitRootPath = getGitRootPath();\n\nfunction findEslintrcDirectory(fileAbsolutePath: string): string {\n  for (\n    let currentDir = fileAbsolutePath;\n    currentDir.startsWith(GitRootPath);\n    currentDir = path.dirname(currentDir)\n  )\n    if (['.eslintrc.js', '.eslintrc.cjs'].some((eslintrc) => fs.existsSync(path.join(currentDir, eslintrc))))\n      return currentDir;\n  throw new Error('Cannot locate eslintrc');\n}\n\nfunction validateSuppressionsJson(json: BulkSuppressionsJson): json is BulkSuppressionsJson {\n  if (typeof json !== 'object') throw new Error(`Invalid JSON object: ${JSON.stringify(json, null, 2)}`);\n  if (json === null) throw new Error('JSON object is null.');\n  if (!json.hasOwnProperty('suppressions')) throw new Error('Missing \"suppressions\" property.');\n  if (!Array.isArray(json.suppressions)) throw new Error('\"suppressions\" property is not an array.');\n\n  if (\n    !json.suppressions.every((suppression) => {\n      if (typeof suppression !== 'object')\n        throw new Error(`Invalid suppression: ${JSON.stringify(suppression, null, 2)}`);\n      if (suppression === null)\n        throw new Error(`Suppression is null: ${JSON.stringify(suppression, null, 2)}`);\n      if (!suppression.hasOwnProperty('file'))\n        throw new Error(`Missing \"file\" property in suppression: ${JSON.stringify(suppression, null, 2)}`);\n      if (typeof suppression.file !== 'string')\n        throw new Error(\n          `\"file\" property in suppression is not a string: ${JSON.stringify(suppression, null, 2)}`\n        );\n      if (!suppression.hasOwnProperty('scopeId'))\n        throw new Error(`Missing \"scopeId\" property in suppression: ${JSON.stringify(suppression, null, 2)}`);\n      if (typeof suppression.scopeId !== 'string')\n        throw new Error(\n          `\"scopeId\" property in suppression is not a string: ${JSON.stringify(suppression, null, 2)}`\n        );\n      if (!suppression.hasOwnProperty('rule'))\n        throw new Error(`Missing \"rule\" property in suppression: ${JSON.stringify(suppression, null, 2)}`);\n      if (typeof suppression.rule !== 'string')\n        throw new Error(\n          `\"rule\" property in suppression is not a string: ${JSON.stringify(suppression, null, 2)}`\n        );\n      return true;\n    })\n  ) {\n    throw new Error(\n      `Invalid suppression in \"suppressions\" array: ${JSON.stringify(json.suppressions, null, 2)}`\n    );\n  }\n  return true;\n}\n\nfunction readSuppressionsJson(fileAbsolutePath: string): BulkSuppressionsJson {\n  const eslintrcDirectory = findEslintrcDirectory(fileAbsolutePath);\n  const suppressionsPath = path.join(eslintrcDirectory, '.eslint-bulk-suppressions.json');\n  let suppressionsJson = { suppressions: [] };\n  try {\n    const fileContent = fs.readFileSync(suppressionsPath, 'utf-8');\n    suppressionsJson = JSON.parse(fileContent);\n\n    if (!validateSuppressionsJson(suppressionsJson)) {\n      console.warn(\n        `Unexpected file content in .eslint-bulk-suppressions.json. JSON expected to be in the following format:\n{\n  suppressions: {\n      file: string;\n      scopeId: string;\n      rule: string;\n  }[];\n}\nPlease check file content, or delete file if suppressions are no longer needed.\n`\n      );\n      suppressionsJson = { suppressions: [] };\n    }\n  } catch {\n    // Do nothing and let JSON.parse() log the error. suppressionsJson will stay as the initialized value.\n  }\n  return suppressionsJson;\n}\n\nfunction shouldWriteSuppression(fileAbsolutePath: string, suppression: Suppression): boolean {\n  if (process.env.ESLINT_BULK_SUPPRESS === undefined) return false;\n\n  if (isSuppressed(fileAbsolutePath, suppression)) return false;\n\n  const rulesToSuppress = process.env.ESLINT_BULK_SUPPRESS.split(',');\n\n  if (rulesToSuppress.length === 1 && rulesToSuppress[0] === '*') return true;\n\n  return rulesToSuppress.includes(suppression.rule);\n}\n\nfunction isSuppressed(fileAbsolutePath: string, suppression: Suppression): boolean {\n  const suppressionsJson = readSuppressionsJson(fileAbsolutePath);\n  return (\n    suppressionsJson.suppressions.find(\n      (element) =>\n        element.file === suppression.file &&\n        element.scopeId === suppression.scopeId &&\n        element.rule === suppression.rule\n    ) !== undefined\n  );\n}\n\nfunction insort<T>(array: T[], item: T, compareFunction: (a: T, b: T) => number): void {\n  const index = array.findIndex((element) => compareFunction(element, item) > 0);\n  if (index === -1) array.push(item);\n  else array.splice(index, 0, item);\n}\n\nfunction compareSuppressions(a: Suppression, b: Suppression): -1 | 0 | 1 {\n  if (a.file < b.file) return -1;\n  if (a.file > b.file) return 1;\n  if (a.scopeId < b.scopeId) return -1;\n  if (a.scopeId > b.scopeId) return 1;\n  if (a.rule < b.rule) return -1;\n  if (a.rule > b.rule) return 1;\n  return 0;\n}\n\nfunction writeSuppressionToFile(\n  fileAbsolutePath: string,\n  suppression: {\n    file: string;\n    scopeId: string;\n    rule: string;\n  }\n): void {\n  const eslintrcDirectory = findEslintrcDirectory(fileAbsolutePath);\n  const suppressionsJson = readSuppressionsJson(fileAbsolutePath);\n\n  insort(suppressionsJson.suppressions, suppression, compareSuppressions);\n\n  const suppressionsPath = path.join(eslintrcDirectory, '.eslint-bulk-suppressions.json');\n  fs.writeFileSync(suppressionsPath, JSON.stringify(suppressionsJson, null, 2));\n}\n\nconst usedSuppressions = new Set<string>();\n\nfunction serializeSuppression(fileAbsolutePath: string, suppression: Suppression): string {\n  return `${fileAbsolutePath}|${suppression.file}|${suppression.scopeId}|${suppression.rule}`;\n}\n\nfunction deserializeSuppression(serializedSuppression: string): Suppression {\n  const [file, scopeId, rule] = serializedSuppression.split('|');\n  return { file, scopeId, rule };\n}\n\n// One-line insert into the ruleContext report method to prematurely exit if the ESLint problem has been suppressed\nexport function shouldBulkSuppress(params: {\n  filename: string;\n  currentNode: TSESTree.Node;\n  ruleId: string;\n}): boolean {\n  // Use this ENV variable to turn off eslint-bulk-suppressions functionality, default behavior is on\n  if (process.env.ESLINT_BULK_ENABLE === 'false') return false;\n\n  const { filename: fileAbsolutePath, currentNode, ruleId: rule } = params;\n  const eslintrcDirectory = findEslintrcDirectory(fileAbsolutePath);\n  const fileRelativePath = path.relative(eslintrcDirectory, fileAbsolutePath);\n  const scopeId = calculateScopeId(currentNode);\n  const suppression = { file: fileRelativePath, scopeId, rule };\n\n  if (shouldWriteSuppression(fileAbsolutePath, suppression)) {\n    writeSuppressionToFile(fileAbsolutePath, suppression);\n  }\n\n  const shouldBulkSuppress = isSuppressed(fileAbsolutePath, suppression);\n\n  if (shouldBulkSuppress) {\n    usedSuppressions.add(serializeSuppression(fileAbsolutePath, suppression));\n  }\n\n  return shouldBulkSuppress;\n}\n\nexport function onFinish(params: { filename: string }): void {\n  if (process.env.ESLINT_BULK_PRUNE === 'true') {\n    BulkSuppressionsPrune(params);\n  }\n}\n\nexport function BulkSuppressionsPrune(params: { filename: string }): void {\n  const { filename: fileAbsolutePath } = params;\n  const suppressionsJson = readSuppressionsJson(fileAbsolutePath);\n  const newSuppressionsJson = {\n    suppressions: suppressionsJson.suppressions.filter((suppression) => {\n      return usedSuppressions.has(serializeSuppression(fileAbsolutePath, suppression));\n    })\n  };\n  const eslintrcDirectory = findEslintrcDirectory(fileAbsolutePath);\n  const suppressionsPath = path.join(eslintrcDirectory, '.eslint-bulk-suppressions.json');\n  fs.writeFileSync(suppressionsPath, JSON.stringify(newSuppressionsJson, null, 2));\n}\n\n// utility function for linter-patch.js to make require statements that use relative paths in linter.js work in linter-patch.js\nexport function requireFromPathToLinterJS(importPath: string): any {\n  if (!eslintFolder) {\n    return require(importPath);\n  }\n  const pathToLinterFolder = path.join(eslintFolder, 'lib', 'linter');\n  const moduleAbsolutePath = require.resolve(importPath, { paths: [pathToLinterFolder] });\n  return require(moduleAbsolutePath);\n}\n\nexport function patchClass<T, U extends T>(originalClass: new () => T, patchedClass: new () => U): void {\n  // Get all the property names of the patched class prototype\n  let patchedProperties = Object.getOwnPropertyNames(patchedClass.prototype);\n\n  // Loop through all the properties\n  for (let prop of patchedProperties) {\n    // Override the property in the original class\n    originalClass.prototype[prop] = patchedClass.prototype[prop];\n  }\n\n  // Handle getters and setters\n  let descriptors = Object.getOwnPropertyDescriptors(patchedClass.prototype);\n  for (let prop in descriptors) {\n    let descriptor = descriptors[prop];\n    if (descriptor.get || descriptor.set) {\n      Object.defineProperty(originalClass.prototype, prop, descriptor);\n    }\n  }\n}\n"]}